title: 'Live Dev Porter'
name: 'Live Dev Porter'
description: 'Simplifies the management and transfer of assets between website environments.'
version: 0.0.174
author: 'Aaron Klump <sourcecode@intheloftstudios.com>'
additional_config:
  - '$CLOUDY_BASEPATH/.live_dev_porter/config.yml'
  - '$CLOUDY_BASEPATH/.live_dev_porter/config.local.yml'
additional_bootstrap: null
default_command: help
max_database_rollbacks_to_keep: 5
backup_remote_db_on_push: true
delete_pull_dumpfiles: true
compress_dumpfiles: true
# https://aboutnetworks.net/scp-macos13/
shell_commands:
  cp: cp
  scp: scp -O
  gzip: gzip
  mysql: mysql
  mysqldump: mysqldump
plugins:
  mysql:
    mysqldump_base_options:
      - single-transaction
      - skip-lock-tables
      - no-tablespaces
commands:
  version:
    require_remote_env: false
    help: Display the installed version of Live Dev Porter

  remote:
    require_remote_env: true
    help: 'Enter the remote server shell.'
    arguments:
      remote_environment:
        help: 'Optional.  The ID of a remote environment.  Defaults to the configured "remote".'
    options:
      verbose:
        type: boolean
        help: 'Run in verbose mode; helps troubleshoot connections.'
        aliases:
          - v
  help:
    help: 'Show this help screen.'
  info:
    help: 'Print the configuration info.'
  pull:
    require_remote_env: true
    require_write_access: true
    help: 'Pull remote database and files to local.'
    arguments:
      source:
        help: 'Optional. The source environment to pull from; defaults to the configured remote.'
    options:
      skip-local-backup:
        type: boolean
        help: Use with caution; the local database backup will be skipped.  The local db will be overwritten.
      workflow:
        type: string
        aliases:
          - wf
        help: 'A workflow to use for the pull; this will be used instead of the configured default.'
      verbose:
        type: boolean
        help: 'Output additional information.'
        aliases:
          - v
      database:
        type: boolean
        help: 'Only pull the database.'
        aliases:
          - d
      files:
        type: boolean
        help: 'Only pull the files.'
        aliases:
          - f
      group:
        type: string
        help: 'Limit the operation by group'
      dry-run:
        type: boolean
        help: 'Preview which files will be copied.'
  push:
    require_remote_env: true
    require_remote_write_access: true
    help: 'Push local database and files to remote.'
    arguments:
      remote_id:
        help: 'Optional. The remote environment to push to; defaults to the configured remote.'
    options:
      verbose:
        type: boolean
        help: 'Output additional information.'
        aliases:
          - v
      database:
        type: boolean
        help: 'Only push the database.'
        aliases:
          - d
      files:
        type: boolean
        help: 'Only push the files.'
        aliases:
          - f
      group:
        type: string
        help: 'Limit the operation by group'
      dry-run:
        type: boolean
        help: 'Preview which files will be copied.'
  import:
    require_write_access: true
    help: 'Import a dumpfile to the local database.'
    arguments:
      filepath:
        help: 'An absolute (or relative to the working directory) path to an existing export file.  Alternately, it may be a portion of a filename used to search through existing files, or simply omitted and you will be shown files to choose from.'
    options:
      id:
        type: string
        help: 'Indicate the database ID to import into, this can be omitted when only one database is defined, or when you want the first (default) database to be used.'
      verbose:
        type: boolean
        help: 'Run in verbose mode; helps troubleshoot connections.'
        aliases:
          - v
  export:
    help: 'Export the local database.'
    arguments:
      filename:
        help: 'Optional filename to use instead of the default, e.g., "rollback".  Do not include the extension.'
    options:
      id:
        type: string
        help: 'Indicate the database ID to export, this can be omitted when only one database is defined, or when you want the first (default) database to be used.'
      workflow:
        type: string
        aliases:
          - wf
        help: 'A workflow to use for export; this will be used instead of the configured default.'
      dir:
        type: string
        help: 'Optional. An absolute path to an alternate, existing directory where the file will be saved.'
      format:
        type: string
        enum:
          - json
        help: 'Use an alternate format, e.g. --format=json.  Prints the absolute path to the export string.'
      force:
        type: boolean
        help: 'Use force to overwrite an existing file, otherwise export will fail.'
      uncompressed:
        type: boolean
        help: 'Do not compress the dumpfile.'
  db:
    help: 'Enter the local database shell.'
    aliases:
      - mysql
    arguments:
      id:
        help: 'Use to enter a database other than the first/default listed for the local environment.'
  config:
    help: 'Get or set a single config value, e.g. "local" or open configuration for editing'
    arguments:
      name:
        help: 'Optional variable name, if getting or setting a single value.'
      value:
        help: 'Optional, only use when setting a single value.'
    options:
      local:
        type: boolean
        help: 'Use this to open config.local.yml instead of config.yml.'
        aliases:
          - l
  config-fix:
    help: Fix common configuration problems, such as missing or stale cached configuration files.
    aliases:
      - configfix
      - fix-config
      - fixconfig
  config-test:
    help: 'Run tests to validate configuration.'
    aliases:
      - configtest
      - health
  config-migrate:
    help: 'Migrate from Loft Deploy configuration.'
    arguments:
      loft_deploy:
        help: 'Optional.  The path to the .loft_deploy directory with the old configuration.  A sibling directory .live_dev_porter will be created.  Defaults to looking in the current directory.'
  init:
    help: 'Initialize local configuration files.'
    options:
      version:
        help: 'Display the current version'
        type: boolean
  clear-cache:
    aliases:
      - clearcache
      - cc
    help: 'Clear all cached data.'
  process:
    help: 'Execute a single workflow processor in a controlled environment.'
    arguments:
      processor:
        help: 'The value as you would add it to a workflow (basename or class::method).'
    options:
      config:
        type: boolean
        help: 'Edit the environment variables sent to the processor.'
        aliases:
          - c
      workflow:
        type: string
        aliases:
          - wf
        help: 'Limit processor selection to this workflow.'
