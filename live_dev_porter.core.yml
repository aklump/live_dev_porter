title: 'Live Dev Porter'
name: 'Live Dev Porter'
description: 'Simplifies the management and transfer of assets between website environments.'
version: 0.0.9
author: 'Aaron Klump <sourcecode@intheloftstudios.com>'
config_path_base: ../../..
path_to_app: .
additional_config:
  - .live_dev_porter/config.yml
  - .live_dev_porter/config.local.yml
additional_bootstrap: null
default_command: info
local_environment_is: production
commands:
  remote:
    help: 'Enter the remote server shell.'
  help:
    help: 'Show this help screen.'
  info:
    help: 'Print the configuration info.'
  fetch:
    access_by_env: [dev, staging]
    help: 'Fetch remote assets to local.'
    options: { verbose: { type: boolean, help: 'Output additional information.', aliases: [v] }, database: { type: boolean, help: 'Indicate the database asset.', aliases: [d] }, files: { type: boolean, help: 'Indicate the files asset.', aliases: [f] }, group: { type: string, help: 'Limit the operation by group' } }
  reset:
    access_by_env: [dev, staging]
    help: 'Reset dev assets with last fetched.'
    options: { verbose: { type: boolean, help: 'Output additional information.', aliases: [v] }, database: { type: boolean, help: 'Indicate the database asset.', aliases: [d] }, files: { type: boolean, help: 'Indicate the files asset.', aliases: [f] }, group: { type: string, help: 'Limit the operation by group' } }
  pull:
    access_by_env: [dev, staging]
    help: 'Fetch and reset in one command.'
    options: { verbose: { type: boolean, help: 'Output additional information.', aliases: [v] }, database: { type: boolean, help: 'Indicate the database asset.', aliases: [d] }, files: { type: boolean, help: 'Indicate the files asset.', aliases: [f] }, group: { type: string, help: 'Limit the operation by group' } }
  import:
    access_by_env: [dev, staging]
    help: 'Import a dumpfile to the local database.'
  export:
    help: 'Export the local database.'
    options: { all: { type: boolean, help: 'Include this option to ignore all table omissions by exclude files.' } }
  db:
    help: 'Enter the local database shell.'
    aliases: [mysql]
  config:
    help: 'Open configuration in $EDITOR.'
    options: { local: { type: boolean, help: 'Use this to open config.local.yml instead of config.yml.', aliases: [l] } }
  configtest:
    help: 'Run tests to validate configuration.'
    aliases: [health]
  init:
    help: 'Initialize local configuration files.'
    access_by_env: [dev]
    options: { version: { help: 'Display the current version', type: boolean } }
  clear-cache:
    aliases: [clearcache, cc]
    help: 'Clear all cached data.'
environments:
  dev:
    plugin: default
    id: dev
    name: 'Local development'
    export: { path: .live_dev_porter/backups, exclude_data_from_tables_listed_in: [data_exclusions.txt], exclude_tables_listed_in: [table_exclusions.txt] }
    fetch: { path: .live_dev_porter/fetch }
  staging:
    plugin: default
    id: test
    name: Staging
  production:
    plugin: default
    id: production
    name: Production
plugin_assignments:
  shell:
    db: mysql
    remote: PRODUCTION_PLUGIN
  fetch:
    db: PRODUCTION_PLUGIN
    files: PRODUCTION_PLUGIN
  reset:
    db: DEV_PLUGIN
    files: default
  export:
    db: mysql
  import:
    db: mysql
